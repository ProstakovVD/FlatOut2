///////////////////////////////////////////////////////////////////////////
// emu_lightmapped.sha
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2003 Bugbear Entertainment ltd. 
// All Rights Reserved.
// 
// Created on 13-Apr-03 10:20:10 PM
// 
// Authors: Tatu Blomberg (tatu@bugbear.fi)
///////////////////////////////////////////////////////////////////////////
Texture	Tex0;
Texture	Tex1;

const string inputStreamFormat = "PosTex2";

vertexshader vSdr = 
	decl
	{
		stream 0;
		float    v0[3];  // Position
		float    v3[2];  // Tex coord 0
		float    v4[2];  // Tex coord 1
	}
	asm
	{
        ; Constants:
        ;  0..3 - Composite World-View-Projection Matrix
		vs.1.1
		
		dcl_position	v0
		dcl_texcoord0	v3	
		dcl_texcoord1	v4
		
		m4x4	oPos, v0, c0
		mov		oT0.xy, v3.xy
		mov		oT1.xy, v4.xy
	};

Technique DualTexture
{
    Pass P0
    {        
		Texture[0] = <Tex0>;
		Texture[1] = <Tex1>;
		
		VertexShader = <vSdr>;

//		ColorArg1[0] = Texture;		//default
		ColorOp[0] = SelectArg1;

		AlphaOp[0] = SelectArg2;

//		ColorArg1[1] = Texture;		//default
		ColorOp[1] = Modulate;
//		ColorArg2[1] = Current;		//default
		AlphaOp[1] = SelectArg2;

//		ColorOp[2] = Disable;
//		AlphaOp[2] = Disable;
	}
}

// Multi pass
Technique MultiPass
{
	// Render modulated colormap
    Pass P0
    {        
		VertexShader = <vSdr>;
		Texture[0] = <Tex0>;

//		ColorArg1[0]		= Texture;		//default
		ColorOp[0]			= SelectArg1;

		AlphaOp[0]			= SelectArg1;
	}
	// Modulate by detail texture
	Pass P1
	{
		Texture[0]			= <Tex1>;
		TexCoordIndex[0]	= 1;
        AddressU[0]			= Wrap;
        AddressV[0]			= Wrap;
		SrcBlend			= Zero;
		DestBlend			= SrcColor;
		AlphaBlendEnable	= TRUE;
		AlphaTestEnable		= FALSE;
		ZWriteEnable		= FALSE;
	}
}



