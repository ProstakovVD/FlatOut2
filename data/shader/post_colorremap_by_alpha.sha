///////////////////////////////////////////////////////////////////////////
// post_colorremap_by_alpha.sha
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2006 Bugbear Entertainment ltd. 
// All Rights Reserved.
// 
// Created on 22.5.2006 18:09
// 
// Authors: Timo Saarinen (timo.saarinen@bugbear.fi)
///////////////////////////////////////////////////////////////////////////
Texture Tex0;	// Source screen texture
Texture Tex1;	// Colur LUT, 256x1 texture

const string inputStreamFormat = "PosprojTex1";

// C3 = multiply color

pixelshader pSdr =
	asm
	{
		ps.1.1
		tex t0
	
		texreg2ar	t1, t0						; use source alpha to index - usually 256x1 - LUT texture using source alpha as index
		add			r0, t0, t1_bias				; signed add (same as add + sub, limited to -128..+127 change)	
		mov			r0.a, t0.a					; original alpha/luminance
	};

Technique T0
{
    Pass P0
    {        
		Texture[0] = <Tex0>;
    	AddressU[0] = Clamp;
    	AddressV[0] = Clamp;
    	MagFilter[0] = Point;
    	
		Texture[1] = <Tex1>;
    	AddressU[1] = Clamp;
    	AddressV[1] = Clamp;
    	MagFilter[1] = Point;   	
    	
		VertexShader = null;
		PixelShader = <pSdr>;
	}
}
	
		