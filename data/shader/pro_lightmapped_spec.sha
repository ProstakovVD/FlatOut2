///////////////////////////////////////////////////////////////////////////
// pro_lightmapped_spec.sha
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2003 Bugbear Entertainment ltd. 
// All Rights Reserved.
// 
// Created on 28.9.2003 16:27:38
// 
// Authors: Tatu Blomberg (tatu@bugbear.fi)
///////////////////////////////////////////////////////////////////////////
Texture	Tex0;
Texture	Tex1;

const string inputStreamFormat = "PosNormTex2";

vertexshader vSdr = 
	decl
	{
		stream 0;
		float    v0[3];  // Position
		float	 v1[3];	 // Normal		
		float    v3[2];  // Tex coord 0
		float    v4[2];  // Tex coord 1
	}
	asm
	{
        ; Constants:
        ;  0..3 - Composite World-View-Projection Matrix
		;
		; c9 = view dir
		; c20 = light dir   
		vs.1.1
		
		dcl_position	v0
		dcl_normal		v1
		dcl_texcoord0	v3
		dcl_texcoord1	v4
		
		m4x4	oPos, v0, c0

		; r0 = vtx pos
		; r1 = cam pos
		
		; move vertex slightly to prevent artifacts
		mov		r0, c9
		mad		r1.xyz, r0.xyz, c32.x, v0

		; vtx -> eye			
		sub		r2.xyz, c8, r1		
		
		dp3		r2.w, r2, r2
		rsq		r2.w, r2.w
		mul		r2.xyz, r2.xyz, r2.w
		
		
		add		r3.xyz, r2, c20
		dp3		r3.w, r3, r3
		rsq		r3.w, r3.w
		mul		r3.xyz, r3.xyz, r3.w

		; r3 = h
				
		; Dot(n,h)
		dp3		r0.w, v1, r3
		sge		r2.x, r0.w, c32.w	; 1 if >= 0
		; Dot(n,l)
		dp3		r1.w, v1, c20
		sge		r2.y, r1.w, c32.w	; 1 if >= 0
		mul		r2.x, r2.x, r2.y
		mul		r0.w, r0.w, r2.x
		
		
		mul		r1.w, r0.w, r0.w
		mul		r1.w, r1.w, r1.w
		mul		r1.w, r1.w, r1.w

		mul		oD0, c22, r1.w		; specular

		mov		oT0.xy, v3.xy
		mov		oT1.xy, v4.xy
	};

pixelshader pSdr =
	asm
	{
		ps.1.1

		tex		t0
		tex		t1

		; modulate color
		mul		r0, t0, t1
		; add specular
		mad_sat r0.rgb, v0, r0.a, r0
	};

Technique T0
{
    Pass P0
    {        
		Texture[0] = <Tex0>;
		Texture[1] = <Tex1>;
		VertexShaderConstantF[32] = float4( 5.0f, 0.0f, 0.0f, 0.0f );		
//		VertexShaderConstant[33] = (0.75f, 0.735f, 0.6525f, 0.0f);  		

		VertexShader = <vSdr>;
		PixelShader = <pSdr>;
	}
}